// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240606165134_Init3")]
    partial class Init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoriesProducts", b =>
                {
                    b.Property<int>("CategoriesEnumerablePK_categoty")
                        .HasColumnType("int");

                    b.Property<int>("ProductsEnumerablePK_product")
                        .HasColumnType("int");

                    b.HasKey("CategoriesEnumerablePK_categoty", "ProductsEnumerablePK_product");

                    b.HasIndex("ProductsEnumerablePK_product");

                    b.ToTable("CategoriesProducts");
                });

            modelBuilder.Entity("WebApplication2.Models.Accounts", b =>
                {
                    b.Property<int>("PK_account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_account"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("FK_role")
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("PK_account");

                    b.HasIndex("FK_role");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WebApplication2.Models.Categories", b =>
                {
                    b.Property<int>("PK_categoty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_categoty"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PK_categoty");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebApplication2.Models.Products", b =>
                {
                    b.Property<int>("PK_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_product"));

                    b.Property<double>("Depth")
                        .HasColumnType("float");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("PK_product");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebApplication2.Models.Roles", b =>
                {
                    b.Property<int>("PK_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_role"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PK_role");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebApplication2.Models.Shopping_Carts", b =>
                {
                    b.Property<int>("FK_account")
                        .HasColumnType("int");

                    b.Property<int>("FK_Product")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("FK_account", "FK_Product");

                    b.HasIndex("FK_Product");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("CategoriesProducts", b =>
                {
                    b.HasOne("WebApplication2.Models.Categories", null)
                        .WithMany()
                        .HasForeignKey("CategoriesEnumerablePK_categoty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Products", null)
                        .WithMany()
                        .HasForeignKey("ProductsEnumerablePK_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.Accounts", b =>
                {
                    b.HasOne("WebApplication2.Models.Roles", "Roles")
                        .WithMany("AccountsEnumerable")
                        .HasForeignKey("FK_role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("WebApplication2.Models.Shopping_Carts", b =>
                {
                    b.HasOne("WebApplication2.Models.Products", "Products")
                        .WithMany("CartsEnumerable")
                        .HasForeignKey("FK_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Accounts", "Accounts")
                        .WithMany("ShoppingCartsEnumerable")
                        .HasForeignKey("FK_account")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApplication2.Models.Accounts", b =>
                {
                    b.Navigation("ShoppingCartsEnumerable");
                });

            modelBuilder.Entity("WebApplication2.Models.Products", b =>
                {
                    b.Navigation("CartsEnumerable");
                });

            modelBuilder.Entity("WebApplication2.Models.Roles", b =>
                {
                    b.Navigation("AccountsEnumerable");
                });
#pragma warning restore 612, 618
        }
    }
}
